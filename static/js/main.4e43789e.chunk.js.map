{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onBackgroundColorChange","color","setState","backgroundColor","hex","onForegroundColorChange","foregroundColor","state","url","isShowLogo","logoData","isShowBackground","allowDownload","svgRef","React","createRef","onChange","bind","assertThisInitialized","onUpload","savePNG","values","queryString","parse","window","location","search","indexOf","vk_platform","saveSvgAsPng","current","children","e","self","file","currentTarget","files","type","reader","FileReader","readAsDataURL","onload","result","_e$currentTarget","name","value","checked","defineProperty","_this$state","options","qrSvg","qrCodeGenerator","createQR","react_default","a","createElement","es6","activePanel","id","style","marginTop","title","className","vkappui","status","bottom","mobile","top","accept","borderRadius","background","padding","display","justifyContent","lib","triangle","colors","onChangeComplete","textAlign","ref","dangerouslySetInnerHTML","__html","before","download_default","size","maxWidth","onClick","stretched","react_download_default","content","flexGrow","Component","_hsMobileUI","connect","subscribe","detail","schemeAttribute","document","createAttribute","data","scheme","body","attributes","setNamedItem","console","log","JSON","stringify","send","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.4e43789e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Button,\n    Div,\n    FormLayout,\n    FormLayoutGroup,\n    Group,\n    Separator,\n    Panel,\n    PanelHeader,\n    HeaderButton,\n    PanelHeaderContent,\n    Avatar,\n    View\n} from '@vkontakte/vkui';\nimport './common.css';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { Input,Checkbox} from \"@happysanta/vk-app-ui\"\nimport qrCodeGenerator from '@vkontakte/vk-qr';\nimport Download from '@axetroy/react-download';\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\nimport {saveSvgAsPng} from 'save-svg-as-png';\nimport {CirclePicker} from 'react-color';\nimport queryString from 'query-string'\n\nimport Icon36LogoVk from '@vkontakte/icons/dist/36/logo_vk';\nimport Icon28QrCodeOutline from '@vkontakte/icons/dist/28/qr_code_outline';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: 'https://vk.cc/al5FPd',\n            isShowLogo: true,\n            logoData: false,\n            isShowBackground: true,\n            backgroundColor: '#ffffff',\n            foregroundColor: '#000000',\n            allowDownload: false\n        };\n\n        this.svgRef = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n        this.onUpload = this.onUpload.bind(this);\n        this.savePNG = this.savePNG.bind(this);\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(window.location.search);\n        let platformsWithoutDownload = ['mobile_android', 'mobile_iphone'];\n        this.setState({allowDownload: platformsWithoutDownload.indexOf(values.vk_platform) == -1});\n    }\n\n    savePNG() {\n        saveSvgAsPng(this.svgRef.current.children[0], 'png.png')\n    }\n\n    onUpload(e) {\n        let self = this;\n        let file = e.currentTarget.files[0];\n        if (file && file.type === 'image/svg+xml') {\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                self.setState({\n                    logoData: reader.result\n                });\n            };\n        }\n    }\n\n    onChange(e) {\n        const {name, value, checked} = e.currentTarget;\n        if (name === 'isShowLogo' || name === 'isShowBackground') {\n            this.setState({[name]: checked});\n        } else {\n            this.setState({[name]: value});\n        }\n    }\n\n    onBackgroundColorChange = (color) => {\n        this.setState({backgroundColor: color.hex});\n    };\n\n    onForegroundColorChange = (color) => {\n        this.setState({foregroundColor: color.hex});\n    };\n\n    render() {\n        const {allowDownload, url, isShowLogo, isShowBackground, backgroundColor, foregroundColor, logoData} = this.state;\n        const options = {\n            isShowLogo: isShowLogo,\n            isShowBackground: isShowBackground,\n            backgroundColor: backgroundColor,\n            foregroundColor: foregroundColor,\n            logoData: logoData,\n        };\n\n        const qrSvg = qrCodeGenerator.createQR(url, 256, 'classCode', options);\n\n        let backgroundPresets = ['#FFFFFF', '#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC'];\n        let foregroundPresets = ['#000000', '#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC'];\n\n        return (\n            <View activePanel=\"mainPanel\">\n                <Panel id=\"mainPanel\">\n\n                    <Group style={{marginTop: \"-5%\"}} title=\"Ссылка\">\n                    <Separator />\n                        <FormLayout className=\"NameUrl\">\n                            <Input\n                                className=\"NameUrl\"\n                                type=\"string\"\n                                name=\"url\"\n                                value={url}\n                                onChange={this.onChange}\n                                status={url ? 'valid' : 'error'}\n                                bottom={url ? '' : 'Введите ссылку'}\n                            />\n                        </FormLayout>\n                    </Group>\n                    <Group title=\"Настройки\">\n                    <Separator />\n                        <FormLayout>\n                            <Checkbox  mobile={false}name=\"isShowLogo\" checked={isShowLogo} onChange={this.onChange}>Использовать\n                                логотип\n                            </Checkbox>\n\n                            {isShowLogo ? (<Input className=\"File\" mobile={true} top=\"SVG-логотип\" type=\"file\" name=\"embed\" onChange={this.onUpload}\n                                                  accept=\"image/svg+xml\"/>) : (null)}\n                            {isShowLogo ? (<FormLayoutGroup top=\"Цвет QR-кода\">\n                                <Div>\n                                    <div style={{\n                                        borderRadius: 25,\n                                        background: 'var(--background_page)',\n                                        padding: 5,\n                                        display: 'flex',\n                                        justifyContent: 'center'\n                                    }}>\n                                        <CirclePicker triangle='hide' colors={foregroundPresets} color={foregroundColor}\n                                                      onChangeComplete={this.onForegroundColorChange}/>\n                                    </div>\n                                </Div>\n                            </FormLayoutGroup>) : (null)}\n\n\n                            <Checkbox mobile={false} name=\"isShowBackground\" checked={isShowBackground}\n                                      onChange={this.onChange}>Фон</Checkbox>\n\n                            {isShowBackground ? (<FormLayoutGroup top=\"Цвет фона\">\n                                <Div>\n                                    <div style={{\n                                        borderRadius: 25,\n                                        background: 'var(--background_page)',\n                                        padding: 5,\n                                        display: 'flex',\n                                        justifyContent: 'center'\n                                    }}>\n                                        <CirclePicker style={{backgroundColor: 'red'}} triangle='hide'\n                                                      colors={backgroundPresets} color={backgroundColor}\n                                                      onChangeComplete={this.onBackgroundColorChange}/>\n                                    </div>\n                                </Div>\n                            </FormLayoutGroup>) : (null)}\n                        </FormLayout>\n\n                    </Group>\n\n                    <Div>\n                        <Div style={{\n                            textAlign: 'center',\n                        }}>\n                            <span ref={this.svgRef} dangerouslySetInnerHTML={{__html: url ? qrSvg : ''}}/>\n                        </Div>\n\n                        {allowDownload ? (<Div style={{display: 'flex', 'justifyContent': 'space-between'}}>\n                            <Button before={<Icon24Download/>} size=\"xl\" style={{maxWidth: 'calc(50% - 4px)'}}\n                                    onClick={this.savePNG} stretched>PNG</Button>\n                            <Download file=\"qr.svg\" content={qrSvg} style={{flexGrow: 1, maxWidth: 'calc(50% - 4px)'}}>\n                                <Button before={<Icon24Download/>} size=\"xl\" stretched>SVG</Button>\n                            </Download>\n                        </Div>) : (null)}\n                    </Div>\n                </Panel>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport '@happysanta/vk-app-ui/dist/vkappui.css'\n\nwindow._hsMobileUI = true/false // тут условие которое ставит true/false в зависимости от устройства.\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log('Connect: ' + JSON.stringify(e));\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}